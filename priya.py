# -*- coding: utf-8 -*-
"""priya.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IpJEpxg9e8eQFGchJCvMmqW3PIJ31ON2
"""

#dataset:https://raw.githubusercontent.com/anujdutt9/Disease-Prediction-from-Symptoms/master/dataset/training_data.csv
#this dataset is about patients medical report.

#create dataframe
import pandas as pd
df=pd.read_csv('https://raw.githubusercontent.com/anujdutt9/Disease-Prediction-from-Symptoms/master/dataset/training_data.csv')
df

#as prognosis column is not required we will drop it
df1=df.drop(['prognosis','Unnamed: 133'],axis=1)
df1

df1.info()

df1.shape

df1.size

df1.isnull().sum()

#visualisation
import seaborn as sns
sns.displot(df1['headache'])

#divide the data into input and output
x=df1.iloc[:,:134].values
x

y=df1.iloc[:,67].values
y

#train and test variables - train_test_split()
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0)

print(x.shape) #(4920,133) - 100%
print(x_train.shape) #(3690,133) - 75%
print(x_test.shape) #(1230,133) - 25%

print(y.shape) #(4920,) - 100%
print(y_train.shape) #(3690,) - 75%
print(y_test.shape) #(1230,) - 25%

#normalization/scaling
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
x_train=scaler.fit_transform(x_train)
x_test=scaler.fit_transform(x_test)

#run a classifier/regression/cluster
from sklearn.linear_model import LinearRegression
model=LinearRegression()

#fit the model(train the model)
model.fit(x_train,y_train)

#predict the output
y_pred=model.predict(x_test)
y_pred

#actual output values
y_test

print(x_train[10]) #these are the normalised/scaled values

#individual prediction
#1
model.predict([x_train[1]])

#2
model.predict([x_train[600]])

#3
model.predict([x_train[8]])